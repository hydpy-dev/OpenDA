plugins {
    id 'java-library'
    id 'eclipse'
}

apply plugin: 'java-library'

project.version = '0.17.0'
project.description = 'The HydPy BlackBoxModel wrapper for OpenDA'

// OpenDA 3.0.0 is currrently distributed with Java 1.8
def javaVersion = JavaVersion.VERSION_1_8;
sourceCompatibility = javaVersion;
targetCompatibility = javaVersion; // defaults to sourceCompatibility

eclipse {
    classpath {
        downloadJavadoc = false
        downloadSources = true
    }
}

repositories {
    mavenCentral()
    // REMARK: inlcude openda libs as a flatDir repository, gradle buildship will then be able to declare the source attachments for eclipse.
    flatDir { 
        dirs 'externalLibs/OpenDA'
	}
}

configurations {
    openDaLibs {
        canBeResolved = false
        canBeConsumed = true
    }
    
    compileOnly.extendsFrom openDaLibs
    testImplementation.extendsFrom openDaLibs
}

dependencies {
    implementation group: 'org.apache.httpcomponents', name: 'fluent-hc', version: '4.5.13'
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
	implementation group: 'org.json', name: 'json', version: '20210307'
	// OpenDA shipf with slf4j-api (and uses it) bit doesn_'t ship with any StaticLoggerBinder
	// So we add it here so in our case we avoid the ugly log messages about that	
	runtimeOnly group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.21', transitive: false

	openDaLibs ':openda_core'

    // Those libs are part of OpenDA and will be automatically in the classpath when we run OpenDA with this extension.
    // They will be not included in our distribution. 
    openDaLibs group: 'joda-time', name: 'joda-time', version: '2.9.6'
    openDaLibs group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    openDaLibs group: 'org.apache.commons', name: 'commons-math3', version: '3.3'
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')

jar {
	// name the main jar file according to OpenDA convention
	archiveBaseName  = 'model_hydpy'

    manifest {
        attributes(
            'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
            'Build-Version'  : "${project.version}",
            'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
            'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",

            'Created-By'     : "Gradle ${gradle.gradleVersion}",

            'Bundle-Name'    : "${project.name}",
			'Bundle-License' : "LICENSE.txt",
			'Bundle-SymbolicName' : "org.hydpy.openda",
			'Bundle-Vendor': "https://github.com/hydpy-dev",
			'Bundle-Version': "${project.version}"
        )
    }
}

tasks.withType(JavaCompile) {
  options.encoding = "UTF-8"
}

task printVersionName {
    doLast {
        println project.version
    }
}


// Distribute compilation and non-OpenDA libs into one single zip file
task buildZip(type: Zip) {
    from jar
    from configurations.runtimeClasspath
}
build.dependsOn buildZip	

// Distribute demos into a separater 'HydPyOpenDABBModelWrapper-Demos-major.minor.bugfix.zip
tasks.register('demosDistribution', Zip) {
    archiveAppendix = "Demos"
    destinationDirectory = layout.buildDirectory.dir('distributions')

    from ("../../demos"){
    	include "**/*"
    	exclude "**/.*"
    }
}
build.dependsOn demosDistribution
